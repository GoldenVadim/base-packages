#!/usr/bin/env bash

# Exit immediately on errors, unset variables, and errors in pipelines
set -euo pipefail

# Основные метаданные пакета
PKG_NAME="libpam"
PKG_VERSION="1.5.3"
PKG_SRC_URL="http://www.linux-pam.org/library/Linux-PAM-1.5.3.tar.gz"
PKG_TARBALL="$(basename "$PKG_SRC_URL")"
PKG_ARCHITECTURE="amd64"
PKG_LICENSE="BSD-3-Clause"
PKG_DEPENDENCIES="zlib:1.3.1"
PKG_INSTALL_DIR="/usr/local"
PKG_BUILD_DIR="/tmp/${PKG_NAME}-${PKG_VERSION}"

# Разрешение зависимостей (заглушка)
resolve_dependencies() {
    if [ -n "${PKG_DEPENDENCIES}" ]; then
        echo "Resolving dependencies..."
        for dep in ${PKG_DEPENDENCIES}; do
            local dep_name dep_version
            dep_name=$(echo "$dep" | cut -d: -f1)
            dep_version=$(echo "$dep" | cut -d: -f2)
            echo " - $dep_name (>= $dep_version)"
            # Добавьте здесь логику установки/проверки зависимостей
        done
    else
        echo "No dependencies."
    fi
}

# Фаза распаковки
unpack_stage() {
    echo "Unpacking sources to ${PKG_BUILD_DIR}..."
    rm -rf "${PKG_BUILD_DIR}"
    mkdir -p "${PKG_BUILD_DIR}"
    pushd "${PKG_BUILD_DIR}" > /dev/null

    echo "Downloading ${PKG_TARBALL}..."
    wget -q "${PKG_SRC_URL}" -O "${PKG_TARBALL}"

    echo "Extracting archive..."
    tar -xzf "${PKG_TARBALL}" --strip-components=1
    popd > /dev/null
    echo "Unpacking completed."
}

# Фаза компиляции
compile_stage() {
    echo "Compiling package in ${PKG_BUILD_DIR}..."
    pushd "${PKG_BUILD_DIR}" > /dev/null

    ./configure --prefix="${PKG_INSTALL_DIR}" --disable-selinux
    make -j"$(nproc)"
    popd > /dev/null
    echo "Compilation completed."
}

# Фаза установки
install_stage() {
    echo "Installing package to ${PKG_INSTALL_DIR}..."
    pushd "${PKG_BUILD_DIR}" > /dev/null

    make install
    popd > /dev/null
    echo "Installation completed."
}

# Объединенная стадия
default() {
    echo "Building and installing ${PKG_NAME} version ${PKG_VERSION}..."
    resolve_dependencies
    unpack_stage
    compile_stage
    install_stage
    echo "All done!"
}

# Эмулятор команд: unpack, compile, install, default
emake() {
    case "${1:-default}" in
        unpack)
            unpack_stage
            ;;
        compile)
            compile_stage
            ;;
        install)
            install_stage
            ;;
        default)
            default
            ;;
        *)
            echo "Unknown command: '$1'"
            echo "Usage: $0 [unpack|compile|install|default]"
            exit 1
            ;;
    esac
}

# Ошибки прерывают выполнение
handle_error() {
    echo "Error: Build or installation process failed." >&2
    exit 1
}

# Главная функция
main() {
    trap 'handle_error' ERR
    emake "$@"
}

# Запуск
main "$@"
